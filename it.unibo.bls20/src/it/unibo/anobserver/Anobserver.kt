/* Generated by AN DISI Unibo */ 
package it.unibo.anobserver

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Anobserver ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		 var on = false  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
					}
					 transition(edgeName="t04",targetState="handleButtonCmd",cond=whenEvent("buttonCmd"))
				}	 
				state("handleButtonCmd") { //this:State
					action { //it:State
						if(  ! on  
						 ){forward("turnOn", "turnOn(ok)" ,"led" ) 
						}
						if(  on  
						 ){forward("turnOff", "turnOff(ok)" ,"led" ) 
						}
						 on = !on  
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
			}
		}
}
